version: '3'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydatabase
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  public_api:
    build:
      context: public_api
      dockerfile: ./public_api.Dockerfile
    container_name: public_api
    ports:
      - "8090:8090"
    #    command: bash -c "cd /backend; python start_db.py; python /backend/scripts/ETL.py; uvicorn main:app --host 0.0.0.0 --port 8090;"
#    entrypoint: [ "bash", "-c", "cd /public_api; python3 create_db.py;" ]
    command: bash -c "if [ ! -f /public_api/db_created.flag ]; then cd /public_api; python3 create_db.py && touch /public_api/db_created.flag; fi; uvicorn main:app --host 0.0.0.0 --port 8090 --reload;"
    env_file:
      - public_api/.env
    volumes:
      - ./public_api:/public_api
      - ./public_api/logs:/public_api/logs
    environment:
      - PYTHONPATH=/public_api
    depends_on:
      - db

  private_api:
    build:
      context: private_api
      dockerfile: ./private_api.Dockerfile
    container_name: private_api
    ports:
      - "127.0.0.1:8091:8091"
    #    command: bash -c "cd /backend; python start_db.py; python /backend/scripts/ETL.py; uvicorn main:app --host 0.0.0.0 --port 8090;"
    #    entrypoint: [ "bash", "-c", "cd /private_api; python3 create_db.py;" ]
    command: bash -c "cd /private_api; uvicorn main:app --host 0.0.0.0 --port 8091 --reload;"
    env_file:
      - public_api/.env
    volumes:
      - ./private_api:/private_api
      - ./private_api/logs:/private_api/logs
    environment:
      - PYTHONPATH=/private_api